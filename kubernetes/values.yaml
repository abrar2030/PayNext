global:
  namespace: paynext
  ingressClass: nginx
  # Financial industry compliance settings
  compliance:
    pci: true
    gdpr: true
    sox: true
  # Enhanced security settings
  security:
    networkPolicies: true
    podSecurityPolicies: true
    securityContext:
      enabled: true
      runAsNonRoot: true
      runAsUser: 10001
      fsGroup: 10001
    rbac:
      enabled: true

image:
  repository: abrar2030
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

# ==============================================================================
# Microservices Configuration
# ==============================================================================
services:
  api-gateway:
    enabled: true
    replicaCount: 1
    image:
      repository: abrar2030/backend-api-gateway
      tag: latest
    service:
      type: NodePort
      ports:
        - name: http
          port: 8002
          targetPort: 8002
          nodePort: 30080
    resources: {}
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3

  eureka-server:
    enabled: true
    replicaCount: 1
    image:
      repository: abrar2030/backend-eureka-server
      tag: latest
    service:
      type: NodePort
      ports:
        - name: http
          port: 8001
          targetPort: 8001
          nodePort: 30081
    resources: {}
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3

  fintech-payment-frontend:
    enabled: true
    replicaCount: 1
    image:
      repository: abrar2030/frontend-fintech-payment
      tag: latest
    service:
      type: NodePort
      ports:
        - name: http
          port: 80
          targetPort: 80
          nodePort: 30000
    resources: {}

  notification-service:
    enabled: true
    replicaCount: 1
    image:
      repository: abrar2030/backend-notification-service
      tag: latest
    service:
      type: ClusterIP
      ports:
        - name: http
          port: 8004
          targetPort: 8004
    resources: {}
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3

  payment-service:
    enabled: true
    replicaCount: 1
    image:
      repository: abrar2030/backend-payment-service
      tag: latest
    service:
      type: ClusterIP
      ports:
        - name: http
          port: 8003
          targetPort: 8003
    resources: {}
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3

  user-service:
    enabled: true
    replicaCount: 1
    image:
      repository: abrar2030/backend-user-service
      tag: latest
    service:
      type: ClusterIP
      ports:
        - name: http
          port: 8000
          targetPort: 8000
    resources: {}
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3

